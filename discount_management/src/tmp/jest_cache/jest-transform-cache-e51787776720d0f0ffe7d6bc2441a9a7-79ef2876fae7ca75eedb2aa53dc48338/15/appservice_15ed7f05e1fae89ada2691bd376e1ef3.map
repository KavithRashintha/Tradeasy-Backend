{"file":"C:\\Users\\dinuk\\Desktop\\My Docs\\Projects\\Tradeasy\\Tradeasy-Backend\\discount_management\\src\\app.service.ts","mappings":";;;;;;;;;;;;;;;AAAA,2CAAmD;AACnD,+CAAwD;AACxD,6CAAmD;AACnD,uDAA8C;AAC9C,qCAAsD;AAK/C,IAAM,UAAU,GAAhB,MAAM,UAAU;IACrB,YAEmB,kBAAyC;QAAzC,uBAAkB,GAAlB,kBAAkB,CAAuB;IACxD,CAAC;IAEL,KAAK,CAAC,cAAc,CAAC,YAA0B;QAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACjE,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,eAAe;QACnB,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,KAAY;QACnC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACtC,MAAM,OAAO,GAAI,KAAK,CAAC,KAA8B,CAAC,OAAO,CAAC;QAC9D,IAAI,CAAC;YACH,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,IAAA,eAAK,EAAC,IAAI,OAAO,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;YAChH,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,iBAAiB,CAAC,CAAC;YACtD,OAAO,iBAAiB,CAAC;QAC3B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,2CAA2C,EAAE,KAAK,CAAC,CAAC;YAClE,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,EAAO;QAC3B,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACvD,CAAC;IAGK,AAAN,KAAK,CAAC,sBAAsB;QAC1B,IAAI,CAAC;YACH,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;YAC/B,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAA,kBAAQ,EAAC,WAAW,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;YACvF,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QACzD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,EAAU;QAC7B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,aAAa,CAAC;QACvB,CAAC;aAAM,CAAC;YACN,OAAO,sBAAsB,CAAC;QAChC,CAAC;IACH,CAAC;CACF,CAAA;AAnDY,gCAAU;AAiCf;IADL,IAAA,eAAI,EAAC,WAAW,CAAC;;;;wDASjB;qBAzCU,UAAU;IADtB,IAAA,mBAAU,GAAE;IAGR,WAAA,IAAA,0BAAgB,EAAC,2BAAS,CAAC,CAAA;qCACS,oBAAU;GAHtC,UAAU,CAmDtB","names":[],"sources":["C:\\Users\\dinuk\\Desktop\\My Docs\\Projects\\Tradeasy\\Tradeasy-Backend\\discount_management\\src\\app.service.ts"],"sourcesContent":["import { Catch, Injectable } from '@nestjs/common';\r\nimport { Cron, CronExpression } from '@nestjs/schedule';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Discounts } from './discount.entity';\r\nimport { Repository, LessThan, ILike } from 'typeorm';\r\nimport { DiscountsDTO } from './dto/discountsDTO';\r\nimport { Query } from 'express-serve-static-core';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  constructor(\r\n    @InjectRepository(Discounts)\r\n    private readonly discountManagement: Repository<Discounts>,\r\n  ) { }\r\n\r\n  async createDiscount(discountsDTO: DiscountsDTO): Promise<Discounts> {\r\n    const newDiscount = this.discountManagement.create(discountsDTO);\r\n    return await this.discountManagement.save(newDiscount);\r\n  }\r\n\r\n  async getAllDiscounts(): Promise<Discounts[]> {\r\n    return await this.discountManagement.find();\r\n  }\r\n\r\n  async searchAllDiscounts(query: Query): Promise<Discounts[]> {\r\n    console.log('Received query:', query);\r\n    const keyword = (query.query as { keyword?: string }).keyword;\r\n    try {\r\n      const filteredDiscounts = await this.discountManagement.find({ where: { productName: ILike(`%${keyword}%`) } });\r\n      console.log('Filtered discounts:', filteredDiscounts);\r\n      return filteredDiscounts;\r\n    } catch (error) {\r\n      console.error('Error occurred while searching discounts:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getDiscountById(id: any): Promise<Discounts | null> {\r\n    return await this.discountManagement.findOneById(id);\r\n  }\r\n\r\n  @Cron('0 0 * * *')\r\n  async deleteExpiredDiscounts() {\r\n    try {\r\n      const currentDate = new Date();\r\n      await this.discountManagement.delete({ endDate: LessThan(currentDate.toISOString()) });\r\n      console.log('Expired discounts deleted successfully.');\r\n    } catch (error) {\r\n      console.error('Error deleting expired discounts:', error);\r\n    }\r\n  }\r\n\r\n  async deleteDiscount(id: number) {\r\n    const result = await this.discountManagement.delete(id);\r\n    if (!result) {\r\n      return \"Not Deleted\";\r\n    } else {\r\n      return \"Successfully Deleted\";\r\n    }\r\n  }\r\n}\r\n"],"version":3}