{"file":"C:\\Users\\dinuk\\Desktop\\My Docs\\Projects\\Tradeasy\\Tradeasy-Backend\\supplier_management\\src\\app.controller.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\dinuk\\Desktop\\My Docs\\Projects\\Tradeasy\\Tradeasy-Backend\\supplier_management\\src\\app.controller.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { Supplier } from './supplier.entity';\r\nimport { SupplierDTO } from './dto/SupplierDTO';\r\nimport { UpdateSupplierDTO } from './dto/UpdateSupplierDTO';\r\n\r\ndescribe('AppController', () => {\r\n  let appController: AppController;\r\n  let appService: AppService;\r\n\r\n  beforeEach(async () => {\r\n    const app: TestingModule = await Test.createTestingModule({\r\n      controllers: [AppController],\r\n      providers: [\r\n        {\r\n          provide: AppService,\r\n          useValue: {\r\n            createSupplier: jest.fn(),\r\n            updateLastLogin: jest.fn(),\r\n            getSupplier: jest.fn(),\r\n            findSupplierByUsername: jest.fn(),\r\n            getAllSuppliers: jest.fn(),\r\n            searchAllSuppliers: jest.fn(),\r\n            updateSupplier: jest.fn(),\r\n            deleteSupplier: jest.fn(),\r\n          },\r\n        },\r\n      ],\r\n    }).compile();\r\n\r\n    appController = app.get<AppController>(AppController);\r\n    appService = app.get<AppService>(AppService);\r\n  });\r\n\r\n  describe('createSupplier', () => {\r\n    it('should create a supplier', async () => {\r\n      const createSupplierDto: SupplierDTO = {\r\n        username: 'testuser',\r\n        password: 'testpassword',\r\n        email: 'test@example.com',\r\n        contactNo: '123456789',\r\n        role: 'supplier',\r\n        address: '123 Test Street',\r\n        nic: '123456789V',\r\n        paymentMethod: 'credit card',\r\n        paymentDetails: '1234-5678-9012-3456',\r\n        profilePicture: 'profile.jpg',\r\n      };\r\n      const result = new Supplier();\r\n      jest.spyOn(appService, 'createSupplier').mockResolvedValue(result);\r\n\r\n      expect(await appController.createSupplier(createSupplierDto)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('updateLastLogin', () => {\r\n    it('should update the last login', async () => {\r\n      const data = { id: 1, lastLogin: new Date() };\r\n      const result = new Supplier();\r\n      jest.spyOn(appService, 'updateLastLogin').mockResolvedValue(result);\r\n\r\n      expect(await appController.updateLastLogin(data)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('getSupplierById', () => {\r\n    it('should return a supplier by id', async () => {\r\n      const id = 1;\r\n      const result = new Supplier();\r\n      jest.spyOn(appService, 'getSupplier').mockResolvedValue(result);\r\n\r\n      expect(await appController.getSupplierById(id)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('getSupplierByUsername', () => {\r\n    it('should return a supplier by username', async () => {\r\n      const username = 'testuser';\r\n      const result = new Supplier();\r\n      jest.spyOn(appService, 'findSupplierByUsername').mockResolvedValue(result);\r\n\r\n      expect(await appController.getSupplierByUsername(username)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('getAllSuppliers', () => {\r\n    it('should return all suppliers', async () => {\r\n      const result = [new Supplier()];\r\n      jest.spyOn(appService, 'getAllSuppliers').mockResolvedValue(result);\r\n\r\n      expect(await appController.getAllSuppliers()).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('searchAllSuppliers', () => {\r\n    it('should search all suppliers', async () => {\r\n      const query = {};\r\n      const result = [new Supplier()];\r\n      jest.spyOn(appService, 'searchAllSuppliers').mockResolvedValue(result);\r\n\r\n      expect(await appController.searchAllSuppliers(query)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('updateSupplier', () => {\r\n    it('should update a supplier', async () => {\r\n      const data = { id: 1, updateSupplierDto: new UpdateSupplierDTO() };\r\n      const result = new Supplier();\r\n      jest.spyOn(appService, 'updateSupplier').mockResolvedValue(result);\r\n\r\n      expect(await appController.updateSupplier(data)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('deleteSupplier', () => {\r\n    it('should delete a supplier', async () => {\r\n      const id = 1;\r\n      const result = 'Successfully Deleted';\r\n      jest.spyOn(appService, 'deleteSupplier').mockResolvedValue(result);\r\n\r\n      expect(await appController.deleteSupplier(id)).toBe(result);\r\n    });\r\n  });\r\n});\r\n"],"version":3}