62bfd10efbd856f901c6db1f88f2472e
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppController = void 0;
const common_1 = require("@nestjs/common");
const app_service_1 = require("./app.service");
const microservices_1 = require("@nestjs/microservices");
const SupplierDTO_1 = require("./dto/SupplierDTO");
let AppController = class AppController {
    constructor(supplierManagement) {
        this.supplierManagement = supplierManagement;
    }
    async createSupplier(createSupplierDto) {
        console.log("sup.controller", createSupplierDto);
        return await this.supplierManagement.createSupplier(createSupplierDto);
    }
    async updateLastLogin(data) {
        const { id, lastLogin } = data;
        console.log("cus.controller", data);
        return await this.supplierManagement.updateLastLogin(id, { lastLogin });
    }
    async getSupplierById(id) {
        return await this.supplierManagement.getSupplier(id);
    }
    async getSupplierByUsername(username) {
        return await this.supplierManagement.findSupplierByUsername(username);
    }
    async getAllSuppliers() {
        return await this.supplierManagement.getAllSuppliers();
    }
    async searchAllSuppliers(query) {
        return await this.supplierManagement.searchAllSuppliers(query);
    }
    async updateSupplier(data) {
        const { id, updateSupplierDto } = data;
        return await this.supplierManagement.updateSupplier(id, updateSupplierDto);
    }
    async deleteSupplier(id) {
        return await this.supplierManagement.deleteSupplier(id);
    }
};
exports.AppController = AppController;
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'CREATE_SUPPLIER' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [SupplierDTO_1.SupplierDTO]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "createSupplier", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'UPDATE_LAST_LOGIN' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "updateLastLogin", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_SUPPLIER' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getSupplierById", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_SUPPLIER_BY_USERNAME' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getSupplierByUsername", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_ALL_SUPPLIERS' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getAllSuppliers", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'SEARCH_ALL_SUPPLIERS' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "searchAllSuppliers", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'UPDATE_SUPPLIER' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "updateSupplier", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'DELETE_SUPPLIER' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Number]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "deleteSupplier", null);
exports.AppController = AppController = __decorate([
    (0, common_1.Controller)(),
    __metadata("design:paramtypes", [app_service_1.AppService])
], AppController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxkaW51a1xcRGVza3RvcFxcTXkgRG9jc1xcUHJvamVjdHNcXFRyYWRlYXN5XFxUcmFkZWFzeS1CYWNrZW5kXFxzdXBwbGllcl9tYW5hZ2VtZW50XFxzcmNcXGFwcC5jb250cm9sbGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUFzRDtBQUN0RCwrQ0FBMkM7QUFDM0MseURBQWdFO0FBQ2hFLG1EQUE4QztBQVF2QyxJQUFNLGFBQWEsR0FBbkIsTUFBTSxhQUFhO0lBQ3hCLFlBQTZCLGtCQUE4QjtRQUE5Qix1QkFBa0IsR0FBbEIsa0JBQWtCLENBQVk7SUFBRyxDQUFDO0lBR3pELEFBQU4sS0FBSyxDQUFDLGNBQWMsQ0FBWSxpQkFBOEI7UUFDNUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2hELE9BQU8sTUFBTSxJQUFJLENBQUMsa0JBQWtCLENBQUMsY0FBYyxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDekUsQ0FBQztJQUdLLEFBQU4sS0FBSyxDQUFDLGVBQWUsQ0FBWSxJQUFxQztRQUNwRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxHQUFHLElBQUksQ0FBQztRQUMvQixPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLE9BQU8sTUFBTSxJQUFJLENBQUMsa0JBQWtCLENBQUMsZUFBZSxDQUFDLEVBQUUsRUFBRSxFQUFDLFNBQVMsRUFBQyxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUdLLEFBQU4sS0FBSyxDQUFDLGVBQWUsQ0FDTixFQUFNO1FBRW5CLE9BQU8sTUFBTSxJQUFJLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFHSyxBQUFOLEtBQUssQ0FBQyxxQkFBcUIsQ0FDWixRQUFZO1FBRXpCLE9BQU8sTUFBTSxJQUFJLENBQUMsa0JBQWtCLENBQUMsc0JBQXNCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUdLLEFBQU4sS0FBSyxDQUFDLGVBQWU7UUFDbkIsT0FBTyxNQUFNLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6RCxDQUFDO0lBR0ssQUFBTixLQUFLLENBQUMsa0JBQWtCLENBQVksS0FBWTtRQUM5QyxPQUFPLE1BQU0sSUFBSSxDQUFDLGtCQUFrQixDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFJSyxBQUFOLEtBQUssQ0FBQyxjQUFjLENBQVksSUFBMEQ7UUFDeEYsTUFBTSxFQUFFLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSxHQUFHLElBQUksQ0FBQztRQUN2QyxPQUFPLE1BQU0sSUFBSSxDQUFDLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztJQUM3RSxDQUFDO0lBR0ssQUFBTixLQUFLLENBQUMsY0FBYyxDQUFZLEVBQVM7UUFDdkMsT0FBTyxNQUFNLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDMUQsQ0FBQztDQUNGLENBQUE7QUFuRFksc0NBQWE7QUFJbEI7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBRSxHQUFHLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQztJQUNyQixXQUFBLElBQUEsdUJBQU8sR0FBRSxDQUFBOztxQ0FBb0IseUJBQVc7O21EQUc3RDtBQUdLO0lBREwsSUFBQSw4QkFBYyxFQUFDLEVBQUcsR0FBRyxFQUFFLG1CQUFtQixFQUFFLENBQUM7SUFDdkIsV0FBQSxJQUFBLHVCQUFPLEdBQUUsQ0FBQTs7OztvREFJL0I7QUFHSztJQURMLElBQUEsOEJBQWMsRUFBQyxFQUFFLEdBQUcsRUFBRSxjQUFjLEVBQUUsQ0FBQztJQUVuQyxXQUFBLElBQUEsdUJBQU8sR0FBRSxDQUFBOzs7O29EQUdiO0FBR0s7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBRSxHQUFHLEVBQUUsMEJBQTBCLEVBQUUsQ0FBQztJQUUvQyxXQUFBLElBQUEsdUJBQU8sR0FBRSxDQUFBOzs7OzBEQUdiO0FBR0s7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBQyxHQUFHLEVBQUUsbUJBQW1CLEVBQUMsQ0FBQzs7OztvREFHMUM7QUFHSztJQURMLElBQUEsOEJBQWMsRUFBQyxFQUFDLEdBQUcsRUFBRSxzQkFBc0IsRUFBQyxDQUFDO0lBQ3BCLFdBQUEsSUFBQSx1QkFBTyxHQUFFLENBQUE7Ozs7dURBRWxDO0FBSUs7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBQyxHQUFHLEVBQUUsaUJBQWlCLEVBQUMsQ0FBQztJQUNuQixXQUFBLElBQUEsdUJBQU8sR0FBRSxDQUFBOzs7O21EQUc5QjtBQUdLO0lBREwsSUFBQSw4QkFBYyxFQUFDLEVBQUMsR0FBRyxFQUFFLGlCQUFpQixFQUFDLENBQUM7SUFDbkIsV0FBQSxJQUFBLHVCQUFPLEdBQUUsQ0FBQTs7OzttREFFOUI7d0JBbERVLGFBQWE7SUFEekIsSUFBQSxtQkFBVSxHQUFFO3FDQUVzQyx3QkFBVTtHQURoRCxhQUFhLENBbUR6QiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGRpbnVrXFxEZXNrdG9wXFxNeSBEb2NzXFxQcm9qZWN0c1xcVHJhZGVhc3lcXFRyYWRlYXN5LUJhY2tlbmRcXHN1cHBsaWVyX21hbmFnZW1lbnRcXHNyY1xcYXBwLmNvbnRyb2xsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb250cm9sbGVyLCBHZXQsIFBhcmFtfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcbmltcG9ydCB7IEFwcFNlcnZpY2UgfSBmcm9tICcuL2FwcC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTWVzc2FnZVBhdHRlcm4sIFBheWxvYWQgfSBmcm9tICdAbmVzdGpzL21pY3Jvc2VydmljZXMnO1xyXG5pbXBvcnQge1N1cHBsaWVyRFRPfSBmcm9tICcuL2R0by9TdXBwbGllckRUTyc7XHJcbmltcG9ydCB7IFN1cHBsaWVyIH0gZnJvbSAnLi9zdXBwbGllci5lbnRpdHknO1xyXG5pbXBvcnQgeyBVcGRhdGVTdXBwbGllckRUTyB9IGZyb20gJy4vZHRvL1VwZGF0ZVN1cHBsaWVyRFRPJztcclxuaW1wb3J0ICogYXMgYmNyeXB0IGZyb20gJ2JjcnlwdCc7XHJcbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSAnZXhwcmVzcy1zZXJ2ZS1zdGF0aWMtY29yZSc7XHJcblxyXG5cclxuQENvbnRyb2xsZXIoKVxyXG5leHBvcnQgY2xhc3MgQXBwQ29udHJvbGxlciB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBzdXBwbGllck1hbmFnZW1lbnQ6IEFwcFNlcnZpY2UpIHt9XHJcblxyXG4gIEBNZXNzYWdlUGF0dGVybih7IGNtZDogJ0NSRUFURV9TVVBQTElFUicgfSlcclxuICBhc3luYyBjcmVhdGVTdXBwbGllcihAUGF5bG9hZCgpIGNyZWF0ZVN1cHBsaWVyRHRvOiBTdXBwbGllckRUTyk6IFByb21pc2U8U3VwcGxpZXI+IHtcclxuICAgIGNvbnNvbGUubG9nKFwic3VwLmNvbnRyb2xsZXJcIixjcmVhdGVTdXBwbGllckR0byk7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5zdXBwbGllck1hbmFnZW1lbnQuY3JlYXRlU3VwcGxpZXIoY3JlYXRlU3VwcGxpZXJEdG8pO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHsgIGNtZDogJ1VQREFURV9MQVNUX0xPR0lOJyB9KVxyXG4gIGFzeW5jIHVwZGF0ZUxhc3RMb2dpbihAUGF5bG9hZCgpIGRhdGE6IHsgaWQ6IG51bWJlciwgbGFzdExvZ2luOiBEYXRlIH0pOiBQcm9taXNlPFN1cHBsaWVyPiB7XHJcbiAgICBjb25zdCB7IGlkLCBsYXN0TG9naW4gfSA9IGRhdGE7XHJcbiAgICBjb25zb2xlLmxvZyhcImN1cy5jb250cm9sbGVyXCIsZGF0YSk7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5zdXBwbGllck1hbmFnZW1lbnQudXBkYXRlTGFzdExvZ2luKGlkLCB7bGFzdExvZ2lufSk7XHJcbiAgfVxyXG5cclxuICBATWVzc2FnZVBhdHRlcm4oeyBjbWQ6ICdHRVRfU1VQUExJRVInIH0pXHJcbiAgYXN5bmMgZ2V0U3VwcGxpZXJCeUlkKFxyXG4gICAgICBAUGF5bG9hZCgpIGlkOmFueVxyXG4gICk6IFByb21pc2U8U3VwcGxpZXIgfCBudWxsPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5zdXBwbGllck1hbmFnZW1lbnQuZ2V0U3VwcGxpZXIoaWQpO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHsgY21kOiAnR0VUX1NVUFBMSUVSX0JZX1VTRVJOQU1FJyB9KVxyXG4gIGFzeW5jIGdldFN1cHBsaWVyQnlVc2VybmFtZShcclxuICAgICAgQFBheWxvYWQoKSB1c2VybmFtZTphbnlcclxuICApOiBQcm9taXNlPFN1cHBsaWVyIHwgbnVsbD4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuc3VwcGxpZXJNYW5hZ2VtZW50LmZpbmRTdXBwbGllckJ5VXNlcm5hbWUodXNlcm5hbWUpO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHtjbWQ6ICdHRVRfQUxMX1NVUFBMSUVSUyd9KVxyXG4gIGFzeW5jIGdldEFsbFN1cHBsaWVycygpOiBQcm9taXNlPFN1cHBsaWVyW10+e1xyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuc3VwcGxpZXJNYW5hZ2VtZW50LmdldEFsbFN1cHBsaWVycygpO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHtjbWQ6ICdTRUFSQ0hfQUxMX1NVUFBMSUVSUyd9KVxyXG4gIGFzeW5jIHNlYXJjaEFsbFN1cHBsaWVycyhAUGF5bG9hZCgpIHF1ZXJ5OiBRdWVyeSk6IFByb21pc2U8U3VwcGxpZXJbXT57XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5zdXBwbGllck1hbmFnZW1lbnQuc2VhcmNoQWxsU3VwcGxpZXJzKHF1ZXJ5KTtcclxuICB9XHJcblxyXG4gIFxyXG4gIEBNZXNzYWdlUGF0dGVybih7Y21kOiAnVVBEQVRFX1NVUFBMSUVSJ30pXHJcbiAgYXN5bmMgdXBkYXRlU3VwcGxpZXIoQFBheWxvYWQoKSBkYXRhOiB7IGlkOiBudW1iZXIsIHVwZGF0ZVN1cHBsaWVyRHRvOiBVcGRhdGVTdXBwbGllckRUTyB9KTogUHJvbWlzZTxTdXBwbGllcj4ge1xyXG4gICAgY29uc3QgeyBpZCwgdXBkYXRlU3VwcGxpZXJEdG8gfSA9IGRhdGE7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5zdXBwbGllck1hbmFnZW1lbnQudXBkYXRlU3VwcGxpZXIoaWQsIHVwZGF0ZVN1cHBsaWVyRHRvKTtcclxuICB9XHJcblxyXG4gIEBNZXNzYWdlUGF0dGVybih7Y21kOiAnREVMRVRFX1NVUFBMSUVSJ30pXHJcbiAgYXN5bmMgZGVsZXRlU3VwcGxpZXIoQFBheWxvYWQoKSBpZDpudW1iZXIpOlByb21pc2U8J05vdCBEZWxldGVkJyB8ICdTdWNjZXNzZnVsbHkgRGVsZXRlZCc+e1xyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuc3VwcGxpZXJNYW5hZ2VtZW50LmRlbGV0ZVN1cHBsaWVyKGlkKTtcclxuICB9XHJcbn1cclxuXHJcbiJdLCJ2ZXJzaW9uIjozfQ==