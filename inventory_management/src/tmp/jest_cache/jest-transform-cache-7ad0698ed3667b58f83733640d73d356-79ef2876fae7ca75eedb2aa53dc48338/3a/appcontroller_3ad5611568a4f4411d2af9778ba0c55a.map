{"file":"C:\\Users\\dinuk\\Desktop\\My Docs\\Projects\\Tradeasy\\Tradeasy-Backend\\inventory_management\\src\\app.controller.ts","mappings":";;;;;;;;;;;;;;;AAAA,2CAA4C;AAC5C,+CAA2C;AAC3C,yDAAgE;AAChE,6DAA0D;AAKnD,IAAM,aAAa,GAAnB,MAAM,aAAa;IACxB,YAA6B,mBAA+B;QAA/B,wBAAmB,GAAnB,mBAAmB,CAAY;IAAG,CAAC;IAG1D,AAAN,KAAK,CAAC,gBAAgB,CACT,sBAAwC;QAEnD,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CACpD,sBAAsB,CACvB,CAAC;IACJ,CAAC;IAGK,AAAN,KAAK,CAAC,gBAAgB,CAAY,EAAU;QAC1C,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;IAC7D,CAAC;IAGK,AAAN,KAAK,CAAC,iBAAiB;QACrB,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,CAAC;IAC/D,CAAC;IAGK,AAAN,KAAK,CAAC,mBAAmB,CAEvB,IAGC;QAED,MAAM,EAAE,EAAE,EAAE,sBAAsB,EAAE,GAAG,IAAI,CAAC;QAC5C,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CACvD,EAAE,EACF,sBAAsB,CACvB,CAAC;IACJ,CAAC;IAGK,AAAN,KAAK,CAAC,mBAAmB,CAAY,EAAU;QAC7C,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;IAChE,CAAC;IAGK,AAAN,KAAK,CAAC,0BAA0B,CAAY,eAAuB;QACjE,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC;IACpF,CAAC;IAGK,AAAN,KAAK,CAAC,gBAAgB;QACpB,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;IAC7D,CAAC;IAGK,AAAN,KAAK,CAAC,YAAY;QAChB,OAAO,4CAA4C,CAAC;IACtD,CAAC;CACF,CAAA;AAxDY,sCAAa;AAIlB;IADL,IAAA,8BAAc,EAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,CAAC;IAE3C,WAAA,IAAA,uBAAO,GAAE,CAAA;;qCAAyB,mCAAgB;;qDAKpD;AAGK;IADL,IAAA,8BAAc,EAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,CAAC;IACtB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;qDAEhC;AAGK;IADL,IAAA,8BAAc,EAAC,EAAE,GAAG,EAAE,yBAAyB,EAAE,CAAC;;;;sDAGlD;AAGK;IADL,IAAA,8BAAc,EAAC,EAAE,GAAG,EAAE,uBAAuB,EAAE,CAAC;IAE9C,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;wDAWX;AAGK;IADL,IAAA,8BAAc,EAAC,EAAE,GAAG,EAAE,uBAAuB,EAAE,CAAC;IACtB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;wDAEnC;AAGK;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,gCAAgC,EAAC,CAAC;IACtB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;+DAE1C;AAGK;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,sBAAsB,EAAC,CAAC;;;;qDAG7C;AAGK;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,eAAe,EAAC,CAAC;;;;iDAGtC;wBAvDU,aAAa;IADzB,IAAA,mBAAU,GAAE;qCAEuC,wBAAU;GADjD,aAAa,CAwDzB","names":[],"sources":["C:\\Users\\dinuk\\Desktop\\My Docs\\Projects\\Tradeasy\\Tradeasy-Backend\\inventory_management\\src\\app.controller.ts"],"sourcesContent":["import { Controller } from '@nestjs/common';\r\nimport { AppService } from './app.service';\r\nimport { MessagePattern, Payload } from '@nestjs/microservices';\r\nimport { InventoryItemDTO } from './dto/InventoryItemDTO';\r\nimport { Item } from './inventory.entity';\r\nimport { UpdateInventoryItemDTO } from './dto/UpdateInventoryItemDTO';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly inventoryManagement: AppService) {}\r\n\r\n  @MessagePattern({ cmd: 'ADD_INVENTORY_ITEM' })\r\n  async addInventoryItem(\r\n    @Payload() createInventoryItemDto: InventoryItemDTO,\r\n  ): Promise<Item> {\r\n    return await this.inventoryManagement.addInventoryItem(\r\n      createInventoryItemDto,\r\n    );\r\n  }\r\n\r\n  @MessagePattern({ cmd: 'GET_INVENTORY_ITEM' })\r\n  async getInventoryItem(@Payload() id: number): Promise<Item> {\r\n    return await this.inventoryManagement.getInventoryItem(id);\r\n  }\r\n\r\n  @MessagePattern({ cmd: 'GET_ALL_INVENTORY_ITEMS' })\r\n  async getInventoryItems(): Promise<Item[]> {\r\n    return await this.inventoryManagement.getAllInventoryItems();\r\n  }\r\n\r\n  @MessagePattern({ cmd: 'UPDATE_INVENTORY_ITEM' })\r\n  async updateInventoryItem(\r\n    @Payload()\r\n    data: {\r\n      id: number;\r\n      updateInventoryItemDto: UpdateInventoryItemDTO;\r\n    },\r\n  ): Promise<Item> {\r\n    const { id, updateInventoryItemDto } = data;\r\n    return await this.inventoryManagement.updateInventoryItem(\r\n      id,\r\n      updateInventoryItemDto,\r\n    );\r\n  }\r\n\r\n  @MessagePattern({ cmd: 'DELETE_INVENTORY_ITEM' })\r\n  async deleteInventoryItem(@Payload() id: number) {\r\n    return await this.inventoryManagement.deleteInventoryItem(id);\r\n  }\r\n\r\n  @MessagePattern({cmd: 'GET_INVENTORY_ITEM_BY_CATEGORY'})\r\n  async getInventoryItemByCategory(@Payload() productCategory: string): Promise<Item[]> {\r\n    return await this.inventoryManagement.getInventoryItemByCategory(productCategory);\r\n  }\r\n\r\n  @MessagePattern({cmd: 'GET_INVENTORY_STATUS'})\r\n  async getNumberOfItems(): Promise<any>{\r\n    return await this.inventoryManagement.getInventoryStatus();\r\n  }\r\n\r\n  @MessagePattern({cmd: 'TEST_FUNCTION'})\r\n  async testFunction(): Promise<any>{\r\n    return \"Communication between services are working\";\r\n  }\r\n}"],"version":3}