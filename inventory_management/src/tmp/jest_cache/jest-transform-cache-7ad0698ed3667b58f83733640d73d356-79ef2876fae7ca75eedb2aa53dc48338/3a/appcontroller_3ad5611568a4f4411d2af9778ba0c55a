71d281c9cd363cb0fb63b7d79e0014e0
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppController = void 0;
const common_1 = require("@nestjs/common");
const app_service_1 = require("./app.service");
const microservices_1 = require("@nestjs/microservices");
const InventoryItemDTO_1 = require("./dto/InventoryItemDTO");
let AppController = class AppController {
    constructor(inventoryManagement) {
        this.inventoryManagement = inventoryManagement;
    }
    async addInventoryItem(createInventoryItemDto) {
        return await this.inventoryManagement.addInventoryItem(createInventoryItemDto);
    }
    async getInventoryItem(id) {
        return await this.inventoryManagement.getInventoryItem(id);
    }
    async getInventoryItems() {
        return await this.inventoryManagement.getAllInventoryItems();
    }
    async updateInventoryItem(data) {
        const { id, updateInventoryItemDto } = data;
        return await this.inventoryManagement.updateInventoryItem(id, updateInventoryItemDto);
    }
    async deleteInventoryItem(id) {
        return await this.inventoryManagement.deleteInventoryItem(id);
    }
    async getInventoryItemByCategory(productCategory) {
        return await this.inventoryManagement.getInventoryItemByCategory(productCategory);
    }
    async getNumberOfItems() {
        return await this.inventoryManagement.getInventoryStatus();
    }
    async testFunction() {
        return "Communication between services are working";
    }
};
exports.AppController = AppController;
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'ADD_INVENTORY_ITEM' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [InventoryItemDTO_1.InventoryItemDTO]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "addInventoryItem", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_INVENTORY_ITEM' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Number]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getInventoryItem", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_ALL_INVENTORY_ITEMS' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getInventoryItems", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'UPDATE_INVENTORY_ITEM' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "updateInventoryItem", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'DELETE_INVENTORY_ITEM' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Number]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "deleteInventoryItem", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_INVENTORY_ITEM_BY_CATEGORY' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getInventoryItemByCategory", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_INVENTORY_STATUS' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getNumberOfItems", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'TEST_FUNCTION' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], AppController.prototype, "testFunction", null);
exports.AppController = AppController = __decorate([
    (0, common_1.Controller)(),
    __metadata("design:paramtypes", [app_service_1.AppService])
], AppController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxkaW51a1xcRGVza3RvcFxcTXkgRG9jc1xcUHJvamVjdHNcXFRyYWRlYXN5XFxUcmFkZWFzeS1CYWNrZW5kXFxpbnZlbnRvcnlfbWFuYWdlbWVudFxcc3JjXFxhcHAuY29udHJvbGxlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSwyQ0FBNEM7QUFDNUMsK0NBQTJDO0FBQzNDLHlEQUFnRTtBQUNoRSw2REFBMEQ7QUFLbkQsSUFBTSxhQUFhLEdBQW5CLE1BQU0sYUFBYTtJQUN4QixZQUE2QixtQkFBK0I7UUFBL0Isd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFZO0lBQUcsQ0FBQztJQUcxRCxBQUFOLEtBQUssQ0FBQyxnQkFBZ0IsQ0FDVCxzQkFBd0M7UUFFbkQsT0FBTyxNQUFNLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxnQkFBZ0IsQ0FDcEQsc0JBQXNCLENBQ3ZCLENBQUM7SUFDSixDQUFDO0lBR0ssQUFBTixLQUFLLENBQUMsZ0JBQWdCLENBQVksRUFBVTtRQUMxQyxPQUFPLE1BQU0sSUFBSSxDQUFDLG1CQUFtQixDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFHSyxBQUFOLEtBQUssQ0FBQyxpQkFBaUI7UUFDckIsT0FBTyxNQUFNLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0lBQy9ELENBQUM7SUFHSyxBQUFOLEtBQUssQ0FBQyxtQkFBbUIsQ0FFdkIsSUFHQztRQUVELE1BQU0sRUFBRSxFQUFFLEVBQUUsc0JBQXNCLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDNUMsT0FBTyxNQUFNLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxtQkFBbUIsQ0FDdkQsRUFBRSxFQUNGLHNCQUFzQixDQUN2QixDQUFDO0lBQ0osQ0FBQztJQUdLLEFBQU4sS0FBSyxDQUFDLG1CQUFtQixDQUFZLEVBQVU7UUFDN0MsT0FBTyxNQUFNLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBR0ssQUFBTixLQUFLLENBQUMsMEJBQTBCLENBQVksZUFBdUI7UUFDakUsT0FBTyxNQUFNLElBQUksQ0FBQyxtQkFBbUIsQ0FBQywwQkFBMEIsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNwRixDQUFDO0lBR0ssQUFBTixLQUFLLENBQUMsZ0JBQWdCO1FBQ3BCLE9BQU8sTUFBTSxJQUFJLENBQUMsbUJBQW1CLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUM3RCxDQUFDO0lBR0ssQUFBTixLQUFLLENBQUMsWUFBWTtRQUNoQixPQUFPLDRDQUE0QyxDQUFDO0lBQ3RELENBQUM7Q0FDRixDQUFBO0FBeERZLHNDQUFhO0FBSWxCO0lBREwsSUFBQSw4QkFBYyxFQUFDLEVBQUUsR0FBRyxFQUFFLG9CQUFvQixFQUFFLENBQUM7SUFFM0MsV0FBQSxJQUFBLHVCQUFPLEdBQUUsQ0FBQTs7cUNBQXlCLG1DQUFnQjs7cURBS3BEO0FBR0s7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBRSxHQUFHLEVBQUUsb0JBQW9CLEVBQUUsQ0FBQztJQUN0QixXQUFBLElBQUEsdUJBQU8sR0FBRSxDQUFBOzs7O3FEQUVoQztBQUdLO0lBREwsSUFBQSw4QkFBYyxFQUFDLEVBQUUsR0FBRyxFQUFFLHlCQUF5QixFQUFFLENBQUM7Ozs7c0RBR2xEO0FBR0s7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBRSxHQUFHLEVBQUUsdUJBQXVCLEVBQUUsQ0FBQztJQUU5QyxXQUFBLElBQUEsdUJBQU8sR0FBRSxDQUFBOzs7O3dEQVdYO0FBR0s7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBRSxHQUFHLEVBQUUsdUJBQXVCLEVBQUUsQ0FBQztJQUN0QixXQUFBLElBQUEsdUJBQU8sR0FBRSxDQUFBOzs7O3dEQUVuQztBQUdLO0lBREwsSUFBQSw4QkFBYyxFQUFDLEVBQUMsR0FBRyxFQUFFLGdDQUFnQyxFQUFDLENBQUM7SUFDdEIsV0FBQSxJQUFBLHVCQUFPLEdBQUUsQ0FBQTs7OzsrREFFMUM7QUFHSztJQURMLElBQUEsOEJBQWMsRUFBQyxFQUFDLEdBQUcsRUFBRSxzQkFBc0IsRUFBQyxDQUFDOzs7O3FEQUc3QztBQUdLO0lBREwsSUFBQSw4QkFBYyxFQUFDLEVBQUMsR0FBRyxFQUFFLGVBQWUsRUFBQyxDQUFDOzs7O2lEQUd0Qzt3QkF2RFUsYUFBYTtJQUR6QixJQUFBLG1CQUFVLEdBQUU7cUNBRXVDLHdCQUFVO0dBRGpELGFBQWEsQ0F3RHpCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZGludWtcXERlc2t0b3BcXE15IERvY3NcXFByb2plY3RzXFxUcmFkZWFzeVxcVHJhZGVhc3ktQmFja2VuZFxcaW52ZW50b3J5X21hbmFnZW1lbnRcXHNyY1xcYXBwLmNvbnRyb2xsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udHJvbGxlciB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcclxuaW1wb3J0IHsgQXBwU2VydmljZSB9IGZyb20gJy4vYXBwLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBNZXNzYWdlUGF0dGVybiwgUGF5bG9hZCB9IGZyb20gJ0BuZXN0anMvbWljcm9zZXJ2aWNlcyc7XHJcbmltcG9ydCB7IEludmVudG9yeUl0ZW1EVE8gfSBmcm9tICcuL2R0by9JbnZlbnRvcnlJdGVtRFRPJztcclxuaW1wb3J0IHsgSXRlbSB9IGZyb20gJy4vaW52ZW50b3J5LmVudGl0eSc7XHJcbmltcG9ydCB7IFVwZGF0ZUludmVudG9yeUl0ZW1EVE8gfSBmcm9tICcuL2R0by9VcGRhdGVJbnZlbnRvcnlJdGVtRFRPJztcclxuXHJcbkBDb250cm9sbGVyKClcclxuZXhwb3J0IGNsYXNzIEFwcENvbnRyb2xsZXIge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgaW52ZW50b3J5TWFuYWdlbWVudDogQXBwU2VydmljZSkge31cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHsgY21kOiAnQUREX0lOVkVOVE9SWV9JVEVNJyB9KVxyXG4gIGFzeW5jIGFkZEludmVudG9yeUl0ZW0oXHJcbiAgICBAUGF5bG9hZCgpIGNyZWF0ZUludmVudG9yeUl0ZW1EdG86IEludmVudG9yeUl0ZW1EVE8sXHJcbiAgKTogUHJvbWlzZTxJdGVtPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5pbnZlbnRvcnlNYW5hZ2VtZW50LmFkZEludmVudG9yeUl0ZW0oXHJcbiAgICAgIGNyZWF0ZUludmVudG9yeUl0ZW1EdG8sXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHsgY21kOiAnR0VUX0lOVkVOVE9SWV9JVEVNJyB9KVxyXG4gIGFzeW5jIGdldEludmVudG9yeUl0ZW0oQFBheWxvYWQoKSBpZDogbnVtYmVyKTogUHJvbWlzZTxJdGVtPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5pbnZlbnRvcnlNYW5hZ2VtZW50LmdldEludmVudG9yeUl0ZW0oaWQpO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHsgY21kOiAnR0VUX0FMTF9JTlZFTlRPUllfSVRFTVMnIH0pXHJcbiAgYXN5bmMgZ2V0SW52ZW50b3J5SXRlbXMoKTogUHJvbWlzZTxJdGVtW10+IHtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLmludmVudG9yeU1hbmFnZW1lbnQuZ2V0QWxsSW52ZW50b3J5SXRlbXMoKTtcclxuICB9XHJcblxyXG4gIEBNZXNzYWdlUGF0dGVybih7IGNtZDogJ1VQREFURV9JTlZFTlRPUllfSVRFTScgfSlcclxuICBhc3luYyB1cGRhdGVJbnZlbnRvcnlJdGVtKFxyXG4gICAgQFBheWxvYWQoKVxyXG4gICAgZGF0YToge1xyXG4gICAgICBpZDogbnVtYmVyO1xyXG4gICAgICB1cGRhdGVJbnZlbnRvcnlJdGVtRHRvOiBVcGRhdGVJbnZlbnRvcnlJdGVtRFRPO1xyXG4gICAgfSxcclxuICApOiBQcm9taXNlPEl0ZW0+IHtcclxuICAgIGNvbnN0IHsgaWQsIHVwZGF0ZUludmVudG9yeUl0ZW1EdG8gfSA9IGRhdGE7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5pbnZlbnRvcnlNYW5hZ2VtZW50LnVwZGF0ZUludmVudG9yeUl0ZW0oXHJcbiAgICAgIGlkLFxyXG4gICAgICB1cGRhdGVJbnZlbnRvcnlJdGVtRHRvLFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIEBNZXNzYWdlUGF0dGVybih7IGNtZDogJ0RFTEVURV9JTlZFTlRPUllfSVRFTScgfSlcclxuICBhc3luYyBkZWxldGVJbnZlbnRvcnlJdGVtKEBQYXlsb2FkKCkgaWQ6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuaW52ZW50b3J5TWFuYWdlbWVudC5kZWxldGVJbnZlbnRvcnlJdGVtKGlkKTtcclxuICB9XHJcblxyXG4gIEBNZXNzYWdlUGF0dGVybih7Y21kOiAnR0VUX0lOVkVOVE9SWV9JVEVNX0JZX0NBVEVHT1JZJ30pXHJcbiAgYXN5bmMgZ2V0SW52ZW50b3J5SXRlbUJ5Q2F0ZWdvcnkoQFBheWxvYWQoKSBwcm9kdWN0Q2F0ZWdvcnk6IHN0cmluZyk6IFByb21pc2U8SXRlbVtdPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5pbnZlbnRvcnlNYW5hZ2VtZW50LmdldEludmVudG9yeUl0ZW1CeUNhdGVnb3J5KHByb2R1Y3RDYXRlZ29yeSk7XHJcbiAgfVxyXG5cclxuICBATWVzc2FnZVBhdHRlcm4oe2NtZDogJ0dFVF9JTlZFTlRPUllfU1RBVFVTJ30pXHJcbiAgYXN5bmMgZ2V0TnVtYmVyT2ZJdGVtcygpOiBQcm9taXNlPGFueT57XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5pbnZlbnRvcnlNYW5hZ2VtZW50LmdldEludmVudG9yeVN0YXR1cygpO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHtjbWQ6ICdURVNUX0ZVTkNUSU9OJ30pXHJcbiAgYXN5bmMgdGVzdEZ1bmN0aW9uKCk6IFByb21pc2U8YW55PntcclxuICAgIHJldHVybiBcIkNvbW11bmljYXRpb24gYmV0d2VlbiBzZXJ2aWNlcyBhcmUgd29ya2luZ1wiO1xyXG4gIH1cclxufSJdLCJ2ZXJzaW9uIjozfQ==