{"file":"C:\\Users\\dinuk\\Desktop\\My Docs\\Projects\\Tradeasy\\Tradeasy-Backend\\order_management\\src\\app.controller.ts","mappings":";;;;;;;;;;;;;;;AAAA,2CAAsD;AACtD,+CAA2C;AAC3C,yDAAgE;AAEhE,6CAAwC;AAExC,6DAAkF;AAI3E,IAAM,aAAa,GAAnB,MAAM,aAAa;IACxB,YAA6B,eAA2B;QAA3B,oBAAe,GAAf,eAAe,CAAY;IAAG,CAAC;IAGtD,AAAN,KAAK,CAAC,YAAY,CAAY,cAAwB;QACpD,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;IACjE,CAAC;IAGK,AAAN,KAAK,CAAC,YAAY,CACH,EAAM;QAEnB,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAGK,AAAN,KAAK,CAAC,YAAY;QAChB,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;IACnD,CAAC;IAGK,AAAN,KAAK,CAAC,WAAW,CAAY,IAAoD;QAC/E,MAAM,EAAE,EAAE,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC;QACpC,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;IAEpE,CAAC;IAGK,AAAN,KAAK,CAAC,WAAW,CAAY,EAAS;QACpC,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC;IAGD,+IAA+I;IAGxI,AAAN,KAAK,CAAC,mBAAmB,CAAY,gBAAkC;QACrE,OAAO,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;IACpE,CAAC;IAGM,AAAN,KAAK,CAAC,mBAAmB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC;IACpD,CAAC;IAGK,AAAN,KAAK,CAAC,oBAAoB,CAAY,WAAmB;QACvD,OAAO,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;IAChE,CAAC;IAGK,AAAN,KAAK,CAAC,mBAAmB,CAAY,IAAoE;QACvG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAA;QACxB,MAAM,EAAE,EAAE,EAAE,sBAAsB,EAAE,GAAG,IAAI,CAAC;QAC5C,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,EAAE,EAAE,sBAAsB,CAAC,CAAC;IACpF,CAAC;IAGK,AAAN,KAAK,CAAC,mBAAmB,CAAY,WAAmB;QACtD,OAAO,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;IAC/D,CAAC;IAGK,AAAN,KAAK,CAAC,wBAAwB,CAAY,MAAc;QACtD,OAAO,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;IAC/D,CAAC;IAGD,mBAAmB;QACjB,OAAO,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC;IACpD,CAAC;IAGK,AAAN,KAAK,CAAC,eAAe,CAAY,KAAY;QAC3C,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;IAGK,AAAN,KAAK,CAAC,2BAA2B,CAAY,EAAU;QACvD,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IACvD,CAAC;CAEF,CAAA;AAlFY,sCAAa;AAIlB;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,cAAc,EAAC,CAAC;IAClB,WAAA,IAAA,uBAAO,GAAE,CAAA;;qCAAiB,mBAAQ;;iDAErD;AAGK;IADL,IAAA,8BAAc,EAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC;IAEhC,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;iDAGb;AAGK;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,gBAAgB,EAAC,CAAC;;;;iDAGvC;AAGK;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,cAAc,EAAC,CAAC;IACnB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;gDAI3B;AAGK;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,cAAc,EAAC,CAAC;IACnB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;gDAE3B;AAMM;IADN,IAAA,8BAAc,EAAE,EAAC,GAAG,EAAE,uBAAuB,EAAC,CAAC;IACpB,WAAA,IAAA,uBAAO,GAAE,CAAA;;qCAAmB,mCAAgB;;wDAEtE;AAGM;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,wBAAwB,EAAC,CAAC;;;;wDAG/C;AAGK;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,0BAA0B,EAAC,CAAC;IACtB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;yDAEpC;AAGK;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,uBAAuB,EAAC,CAAC;IACpB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;wDAInC;AAGK;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,uBAAuB,EAAC,CAAC;IACpB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;wDAEnC;AAGK;IADN,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,+BAA+B,EAAC,CAAC;IACtB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;6DAExC;AAGD;IADA,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,wBAAwB,EAAC,CAAC;;;;wDAG9C;AAGK;IADL,IAAA,8BAAc,EAAC,EAAC,GAAG,EAAE,mBAAmB,EAAC,CAAC;IACpB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;oDAE/B;AAGK;IADL,IAAA,8BAAc,EAAC,EAAE,GAAG,EAAE,iCAAiC,EAAE,CAAC;IACxB,WAAA,IAAA,uBAAO,GAAE,CAAA;;;;gEAE7C;wBAhFU,aAAa;IADzB,IAAA,mBAAU,GAAE;qCAEmC,wBAAU;GAD7C,aAAa,CAkFzB","names":[],"sources":["C:\\Users\\dinuk\\Desktop\\My Docs\\Projects\\Tradeasy\\Tradeasy-Backend\\order_management\\src\\app.controller.ts"],"sourcesContent":["import {Controller, Get, Param} from '@nestjs/common';\r\nimport { AppService } from './app.service';\r\nimport { MessagePattern, Payload } from '@nestjs/microservices';\r\nimport { Order, PurchaseOrder } from './order.entity';\r\nimport {OrderDTO} from './DTO/OrderDTO';\r\nimport {UpdateOrderDTO} from \"./DTO/UpdateOrderDTO\";\r\nimport { PurchaseOrderDTO, UpdatePurchaseOrderDTO } from './DTO/purchaseOrderDTO';\r\nimport { Query } from 'express-serve-static-core';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly orderManagement: AppService) {}\r\n\r\n  @MessagePattern({cmd: 'CREATE_ORDER'})\r\n  async createOrders(@Payload() createOrderDto: OrderDTO): Promise<Order>{\r\n    return await this.orderManagement.createOrders(createOrderDto);\r\n  }\r\n\r\n  @MessagePattern({ cmd: 'GET_ORDER' })\r\n  async getOrderById(\r\n      @Payload() id:any\r\n  ): Promise<Order | null> {\r\n    return await this.orderManagement.findOrder(id);\r\n  }\r\n\r\n  @MessagePattern({cmd: 'GET_ALL_ORDERS'})\r\n  async getAllOrders(): Promise<Order[]>{\r\n    return await this.orderManagement.getAllOrders();\r\n  }\r\n\r\n  @MessagePattern({cmd: 'UPDATE_ORDER'})\r\n  async updateOrder(@Payload() data: { id: number, updateOrderDto: UpdateOrderDTO }): Promise<Order> {\r\n    const { id, updateOrderDto } = data;\r\n    return await this.orderManagement.updateOrder(id, updateOrderDto);\r\n\r\n  }\r\n\r\n  @MessagePattern({cmd: 'DELETE_ORDER'})\r\n  async deleteOrder(@Payload() id:number){\r\n    return await this.orderManagement.deleteOrder(id);\r\n  }\r\n\r\n\r\n  //=============================================INVENTORY_ORDER_MANAGEMENT======================================================================\r\n\r\n  @MessagePattern ({cmd: 'CREATE_PURCHASE_ORDER'})\r\n   async createPurchaseOrder(@Payload() purchaseOrderDTO: PurchaseOrderDTO):Promise<PurchaseOrderDTO>{\r\n     return this.orderManagement.createPurchaseOrder(purchaseOrderDTO);\r\n   }\r\n\r\n    @MessagePattern({cmd: 'GET_ALL_PURCHASE_ORDER'})\r\n    async getAllPurchaseOrder(): Promise<PurchaseOrderDTO[]>{\r\n      return this.orderManagement.getAllPurchaseOrder();\r\n    }\r\n\r\n    @MessagePattern({cmd: 'GET_PURCHASE_ORDER_BY_ID'})\r\n    async getPurchaseOrderById(@Payload() purchase_id: number): Promise<PurchaseOrderDTO>{\r\n      return this.orderManagement.getPurchaseOrderById(purchase_id);\r\n    }\r\n\r\n    @MessagePattern({cmd: 'UPDATE_PURCHASE_ORDER'})\r\n    async updatePurchaseOrder(@Payload() data: { id: number, updatePurchaseOrderDTO: UpdatePurchaseOrderDTO }): Promise<PurchaseOrder> {\r\n      console.log(\"con:\",data)\r\n      const { id, updatePurchaseOrderDTO } = data;\r\n      return await this.orderManagement.updatePurchaseOrder(id, updatePurchaseOrderDTO);\r\n    }\r\n\r\n    @MessagePattern({cmd: 'DELETE_PURCHASE_ORDER'})\r\n    async deletePurchaseOrder(@Payload() purchase_id: number){\r\n      return this.orderManagement.deletePurchaseOrder(purchase_id);\r\n    }\r\n\r\n   @MessagePattern({cmd: 'GET_COUNT_OF_ORDERS_BY_STATUS'})  \r\n    async getCountOfOrdersByStatus(@Payload() status: string): Promise<number> {\r\n      return this.orderManagement.getCountOfOrdersByStatus(status);\r\n    }\r\n\r\n   @MessagePattern({cmd: 'GET_CURRENT_MONTH_NAME'})\r\n    getCurrentMonthName(): string {\r\n      return this.orderManagement.getCurrentMonthName();\r\n    } \r\n\r\n    @MessagePattern({cmd: 'SEARCH_ALL_ORDERS'})\r\n    async searchAllOrders(@Payload() query: Query): Promise<PurchaseOrderDTO[]>{\r\n      return await this.orderManagement.searchAllOrders(query);\r\n    }\r\n  \r\n    @MessagePattern({ cmd: 'MARK_PURCHASE_ORDER_AS_DEPARTED' })\r\n    async markPurchaseOrderAsDeparted(@Payload() id: number): Promise<PurchaseOrder> {\r\n    return await this.orderManagement.markAsDeparted(id);\r\n  }\r\n\r\n}\r\n"],"version":3}