{"file":"C:\\Users\\dinuk\\Desktop\\My Docs\\Projects\\Tradeasy\\Tradeasy-Backend\\payment_management\\src\\app.controller.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\dinuk\\Desktop\\My Docs\\Projects\\Tradeasy\\Tradeasy-Backend\\payment_management\\src\\app.controller.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { CustomerPayments, SupplierPayments } from './payment.entity';\r\nimport { SupplierPaymentDTO } from './dto/supplierPaymentDTO';\r\n\r\ndescribe('AppController', () => {\r\n  let appController: AppController;\r\n  let appService: AppService;\r\n\r\n  beforeEach(async () => {\r\n    const app: TestingModule = await Test.createTestingModule({\r\n      controllers: [AppController],\r\n      providers: [\r\n        {\r\n          provide: AppService,\r\n          useValue: {\r\n            createCustomerPaymentSession: jest.fn(),\r\n            getCheckoutSession: jest.fn(),\r\n            saveCustomerPayments: jest.fn(),\r\n            getAllCustomerPayments: jest.fn(),\r\n            getCustomerPaymentById: jest.fn(),\r\n            searchAllPayments: jest.fn(),\r\n            createSupplierPayment: jest.fn(),\r\n            getAllSupplierPayments: jest.fn(),\r\n            searchAllSupplierPayments: jest.fn(),\r\n          },\r\n        },\r\n      ],\r\n    }).compile();\r\n\r\n    appController = app.get<AppController>(AppController);\r\n    appService = app.get<AppService>(AppService);\r\n  });\r\n\r\n  describe('createCustomerPaymentSession', () => {\r\n    it('should return a session URL', async () => {\r\n      const result = { sessionUrl: 'http://example.com' };\r\n      jest.spyOn(appService, 'createCustomerPaymentSession').mockResolvedValue(result);\r\n\r\n      expect(await appController.createCustomerPaymentSession({})).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('getCheckoutSession', () => {\r\n    it('should return a checkout session', async () => {\r\n      const sessionId = 'sessionId';\r\n      const result = { id: sessionId };\r\n      jest.spyOn(appService, 'getCheckoutSession').mockResolvedValue(result);\r\n\r\n      expect(await appController.getCheckoutSession(sessionId)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('saveCustomerPayments', () => {\r\n    it('should save customer payments', async () => {\r\n      const data = {};\r\n      const result = new CustomerPayments();\r\n      jest.spyOn(appService, 'saveCustomerPayments').mockResolvedValue(result);\r\n\r\n      expect(await appController.saveCustomerPayments(data)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('getAllCustomerPayments', () => {\r\n    it('should return all customer payments', async () => {\r\n      const result = [new CustomerPayments()];\r\n      jest.spyOn(appService, 'getAllCustomerPayments').mockResolvedValue(result);\r\n\r\n      expect(await appController.getAllCustomerPayments()).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('getCustomerPaymentById', () => {\r\n    it('should return a customer payment by id', async () => {\r\n      const id = 'id';\r\n      const result = new CustomerPayments();\r\n      jest.spyOn(appService, 'getCustomerPaymentById').mockResolvedValue(result);\r\n\r\n      expect(await appController.getCustomerPaymentById(id)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('searchAllPayments', () => {\r\n    it('should search all customer payments', async () => {\r\n      const query = {};\r\n      const result = [new CustomerPayments()];\r\n      jest.spyOn(appService, 'searchAllPayments').mockResolvedValue(result);\r\n\r\n      expect(await appController.searchAllPayments(query)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('createSupplierPayment', () => {\r\n    it('should create supplier payment', async () => {\r\n      const supplierPaymentDTO = new SupplierPaymentDTO();\r\n      const result = new SupplierPayments();\r\n      jest.spyOn(appService, 'createSupplierPayment').mockResolvedValue(result);\r\n\r\n      expect(await appController.createSupplierPayment(supplierPaymentDTO)).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('getAllSupplierPayments', () => {\r\n    it('should return all supplier payments', async () => {\r\n      const result = [new SupplierPayments()];\r\n      jest.spyOn(appService, 'getAllSupplierPayments').mockResolvedValue(result);\r\n\r\n      expect(await appController.getAllSupplierPayments()).toBe(result);\r\n    });\r\n  });\r\n\r\n  describe('searchAllSupplierPayments', () => {\r\n    it('should search all supplier payments', async () => {\r\n      const query = {};\r\n      const result = [new SupplierPayments()];\r\n      jest.spyOn(appService, 'searchAllSupplierPayments').mockResolvedValue(result);\r\n\r\n      expect(await appController.searchAllSupplierPayments(query)).toBe(result);\r\n    });\r\n  });\r\n});\r\n"],"version":3}