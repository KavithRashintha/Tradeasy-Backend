2a9405093f3a9bca1a12a9416fa2bdd4
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppController = void 0;
/* eslint-disable prettier/prettier */
const common_1 = require("@nestjs/common");
const app_service_1 = require("./app.service");
const microservices_1 = require("@nestjs/microservices");
const supplierPaymentDTO_1 = require("./dto/supplierPaymentDTO");
let AppController = class AppController {
    constructor(PaymentManagement) {
        this.PaymentManagement = PaymentManagement;
    }
    async createCustomerPaymentSession(data) {
        return await this.PaymentManagement.createCustomerPaymentSession(data);
    }
    async getCheckoutSession(sessionId) {
        console.log('Session ID:', sessionId);
        return await this.PaymentManagement.getCheckoutSession(sessionId);
    }
    // @MessagePattern({ cmd: 'CREATE_CUSTOMER_PAYMENT_RECEIPT' })
    // async saveCustomerPaymentReceipt(@Body() data: any): Promise<CustomerPayments>{
    //   return this.PaymentManagement.saveCustomerPaymentReceipt(data);
    // }
    async saveCustomerPayments(data) {
        return this.PaymentManagement.saveCustomerPayments(data);
    }
    async getAllCustomerPayments() {
        return await this.PaymentManagement.getAllCustomerPayments();
    }
    async getCustomerPaymentById(id) {
        return await this.PaymentManagement.getCustomerPaymentById(id);
    }
    async searchAllPayments(query) {
        return await this.PaymentManagement.searchAllPayments(query);
    }
    //Supplier Payments
    async createSupplierPayment(supplierPaymentDTO) {
        return await this.PaymentManagement.createSupplierPayment(supplierPaymentDTO);
    }
    async getAllSupplierPayments() {
        return await this.PaymentManagement.getAllSupplierPayments();
    }
    async searchAllSupplierPayments(query) {
        return await this.PaymentManagement.searchAllSupplierPayments(query);
    }
};
exports.AppController = AppController;
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'CREATE_CHECKOUT_SESSION' }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "createCustomerPaymentSession", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_CHECKOUT_SESSION' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getCheckoutSession", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'CREATE_CUSTOMER_PAYMENT' }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "saveCustomerPayments", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_ALL_CUSTOMER_PAYMENTS' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getAllCustomerPayments", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_CUSTOMER_PAYMENT' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getCustomerPaymentById", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'SEARCH_ALL_CUSTOMER_PAYMENTS' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "searchAllPayments", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'CREATE_SUPPLIER_PAYMENT' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [supplierPaymentDTO_1.SupplierPaymentDTO]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "createSupplierPayment", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'GET_ALL_SUPPLIER_PAYMENTS' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], AppController.prototype, "getAllSupplierPayments", null);
__decorate([
    (0, microservices_1.MessagePattern)({ cmd: 'SEARCH_ALL_SUPPLIER_PAYMENTS' }),
    __param(0, (0, microservices_1.Payload)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], AppController.prototype, "searchAllSupplierPayments", null);
exports.AppController = AppController = __decorate([
    (0, common_1.Controller)(),
    __metadata("design:paramtypes", [app_service_1.AppService])
], AppController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxkaW51a1xcRGVza3RvcFxcTXkgRG9jc1xcUHJvamVjdHNcXFRyYWRlYXN5XFxUcmFkZWFzeS1CYWNrZW5kXFxwYXltZW50X21hbmFnZW1lbnRcXHNyY1xcYXBwLmNvbnRyb2xsZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0NBQXNDO0FBQ3RDLDJDQUErRDtBQUMvRCwrQ0FBMkM7QUFDM0MseURBQWdFO0FBRWhFLGlFQUE4RDtBQU12RCxJQUFNLGFBQWEsR0FBbkIsTUFBTSxhQUFhO0lBQ3hCLFlBQTZCLGlCQUE2QjtRQUE3QixzQkFBaUIsR0FBakIsaUJBQWlCLENBQVk7SUFBRyxDQUFDO0lBR3hELEFBQU4sS0FBSyxDQUFDLDRCQUE0QixDQUFTLElBQVM7UUFDbEQsT0FBTyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyw0QkFBNEIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBR0ssQUFBTixLQUFLLENBQUMsa0JBQWtCLENBQVksU0FBaUI7UUFDbkQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDdEMsT0FBTyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNwRSxDQUFDO0lBRUQsOERBQThEO0lBQzlELGtGQUFrRjtJQUNsRixvRUFBb0U7SUFDcEUsSUFBSTtJQUdFLEFBQU4sS0FBSyxDQUFDLG9CQUFvQixDQUFTLElBQVM7UUFDMUMsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUdLLEFBQU4sS0FBSyxDQUFDLHNCQUFzQjtRQUMxQixPQUFPLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLHNCQUFzQixFQUFFLENBQUM7SUFDL0QsQ0FBQztJQUdLLEFBQU4sS0FBSyxDQUFDLHNCQUFzQixDQUFZLEVBQU87UUFDN0MsT0FBTyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBR0ssQUFBTixLQUFLLENBQUMsaUJBQWlCLENBQVksS0FBWTtRQUM3QyxPQUFPLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRCxtQkFBbUI7SUFFYixBQUFOLEtBQUssQ0FBQyxxQkFBcUIsQ0FBWSxrQkFBc0M7UUFDM0UsT0FBTyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxxQkFBcUIsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQ2hGLENBQUM7SUFHSyxBQUFOLEtBQUssQ0FBQyxzQkFBc0I7UUFDMUIsT0FBTyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO0lBQy9ELENBQUM7SUFHSyxBQUFOLEtBQUssQ0FBQyx5QkFBeUIsQ0FBWSxLQUFZO1FBQ3JELE9BQU8sTUFBTSxJQUFJLENBQUMsaUJBQWlCLENBQUMseUJBQXlCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkUsQ0FBQztDQUVGLENBQUE7QUF2RFksc0NBQWE7QUFJbEI7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBRSxHQUFHLEVBQUUseUJBQXlCLEVBQUUsQ0FBQztJQUNmLFdBQUEsSUFBQSxhQUFJLEdBQUUsQ0FBQTs7OztpRUFFekM7QUFHSztJQURMLElBQUEsOEJBQWMsRUFBQyxFQUFFLEdBQUcsRUFBRSxzQkFBc0IsRUFBRSxDQUFDO0lBQ3RCLFdBQUEsSUFBQSx1QkFBTyxHQUFFLENBQUE7Ozs7dURBR2xDO0FBUUs7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBRSxHQUFHLEVBQUUseUJBQXlCLEVBQUUsQ0FBQztJQUN2QixXQUFBLElBQUEsYUFBSSxHQUFFLENBQUE7Ozs7eURBRWpDO0FBR0s7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBRSxHQUFHLEVBQUUsMkJBQTJCLEVBQUUsQ0FBQzs7OzsyREFHcEQ7QUFHSztJQURMLElBQUEsOEJBQWMsRUFBQyxFQUFFLEdBQUcsRUFBRSxzQkFBc0IsRUFBRSxDQUFDO0lBQ2xCLFdBQUEsSUFBQSx1QkFBTyxHQUFFLENBQUE7Ozs7MkRBRXRDO0FBR0s7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBQyxHQUFHLEVBQUUsOEJBQThCLEVBQUMsQ0FBQztJQUM3QixXQUFBLElBQUEsdUJBQU8sR0FBRSxDQUFBOzs7O3NEQUVqQztBQUlLO0lBREwsSUFBQSw4QkFBYyxFQUFDLEVBQUMsR0FBRyxFQUFFLHlCQUF5QixFQUFDLENBQUM7SUFDcEIsV0FBQSxJQUFBLHVCQUFPLEdBQUUsQ0FBQTs7cUNBQXFCLHVDQUFrQjs7MERBRTVFO0FBR0s7SUFETCxJQUFBLDhCQUFjLEVBQUMsRUFBRSxHQUFHLEVBQUUsMkJBQTJCLEVBQUUsQ0FBQzs7OzsyREFHcEQ7QUFHSztJQURMLElBQUEsOEJBQWMsRUFBQyxFQUFDLEdBQUcsRUFBRSw4QkFBOEIsRUFBQyxDQUFDO0lBQ3JCLFdBQUEsSUFBQSx1QkFBTyxHQUFFLENBQUE7Ozs7OERBRXpDO3dCQXJEVSxhQUFhO0lBRHpCLElBQUEsbUJBQVUsR0FBRTtxQ0FFcUMsd0JBQVU7R0FEL0MsYUFBYSxDQXVEekIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxkaW51a1xcRGVza3RvcFxcTXkgRG9jc1xcUHJvamVjdHNcXFRyYWRlYXN5XFxUcmFkZWFzeS1CYWNrZW5kXFxwYXltZW50X21hbmFnZW1lbnRcXHNyY1xcYXBwLmNvbnRyb2xsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgcHJldHRpZXIvcHJldHRpZXIgKi9cclxuaW1wb3J0IHsgQ29udHJvbGxlciwgUG9zdCwgQm9keSwgUGFyYW0gfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7IFxyXG5pbXBvcnQgeyBBcHBTZXJ2aWNlIH0gZnJvbSAnLi9hcHAuc2VydmljZSc7XHJcbmltcG9ydCB7IE1lc3NhZ2VQYXR0ZXJuLCBQYXlsb2FkIH0gZnJvbSAnQG5lc3Rqcy9taWNyb3NlcnZpY2VzJztcclxuaW1wb3J0IHsgQ3VzdG9tZXJQYXltZW50RFRPLCBEYXRhIH0gZnJvbSAnLi9kdG8vY3V0b21lclBheW1lbnREVE8nO1xyXG5pbXBvcnQgeyBTdXBwbGllclBheW1lbnREVE8gfSBmcm9tICcuL2R0by9zdXBwbGllclBheW1lbnREVE8nO1xyXG5pbXBvcnQgeyBDdXN0b21lclBheW1lbnRzLCBTdXBwbGllclBheW1lbnRzfSBmcm9tICcuL3BheW1lbnQuZW50aXR5JztcclxuaW1wb3J0IHsgUXVlcnkgfSBmcm9tICdleHByZXNzLXNlcnZlLXN0YXRpYy1jb3JlJztcclxuaW1wb3J0IHsgQ2FydCB9IGZyb20gJy4vc3RyaXBlL0NhcnQubW9kZWwnO1xyXG5cclxuQENvbnRyb2xsZXIoKVxyXG5leHBvcnQgY2xhc3MgQXBwQ29udHJvbGxlciB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBQYXltZW50TWFuYWdlbWVudDogQXBwU2VydmljZSkge31cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHsgY21kOiAnQ1JFQVRFX0NIRUNLT1VUX1NFU1NJT04nIH0pXHJcbiAgYXN5bmMgY3JlYXRlQ3VzdG9tZXJQYXltZW50U2Vzc2lvbihAQm9keSgpIGRhdGE6IGFueSk6IFByb21pc2U8eyBzZXNzaW9uVXJsOiBzdHJpbmcgfT57XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5QYXltZW50TWFuYWdlbWVudC5jcmVhdGVDdXN0b21lclBheW1lbnRTZXNzaW9uKGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHsgY21kOiAnR0VUX0NIRUNLT1VUX1NFU1NJT04nIH0pXHJcbiAgYXN5bmMgZ2V0Q2hlY2tvdXRTZXNzaW9uKEBQYXlsb2FkKCkgc2Vzc2lvbklkOiBzdHJpbmcpe1xyXG4gICAgY29uc29sZS5sb2coJ1Nlc3Npb24gSUQ6Jywgc2Vzc2lvbklkKTtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLlBheW1lbnRNYW5hZ2VtZW50LmdldENoZWNrb3V0U2Vzc2lvbihzZXNzaW9uSWQpO1xyXG4gIH1cclxuXHJcbiAgLy8gQE1lc3NhZ2VQYXR0ZXJuKHsgY21kOiAnQ1JFQVRFX0NVU1RPTUVSX1BBWU1FTlRfUkVDRUlQVCcgfSlcclxuICAvLyBhc3luYyBzYXZlQ3VzdG9tZXJQYXltZW50UmVjZWlwdChAQm9keSgpIGRhdGE6IGFueSk6IFByb21pc2U8Q3VzdG9tZXJQYXltZW50cz57XHJcbiAgLy8gICByZXR1cm4gdGhpcy5QYXltZW50TWFuYWdlbWVudC5zYXZlQ3VzdG9tZXJQYXltZW50UmVjZWlwdChkYXRhKTtcclxuICAvLyB9XHJcblxyXG4gIEBNZXNzYWdlUGF0dGVybih7IGNtZDogJ0NSRUFURV9DVVNUT01FUl9QQVlNRU5UJyB9KVxyXG4gIGFzeW5jIHNhdmVDdXN0b21lclBheW1lbnRzKEBCb2R5KCkgZGF0YTogYW55KTogUHJvbWlzZTxDdXN0b21lclBheW1lbnRzPntcclxuICAgIHJldHVybiB0aGlzLlBheW1lbnRNYW5hZ2VtZW50LnNhdmVDdXN0b21lclBheW1lbnRzKGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHsgY21kOiAnR0VUX0FMTF9DVVNUT01FUl9QQVlNRU5UUycgfSlcclxuICBhc3luYyBnZXRBbGxDdXN0b21lclBheW1lbnRzKCk6IFByb21pc2U8Q3VzdG9tZXJQYXltZW50c1tdPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5QYXltZW50TWFuYWdlbWVudC5nZXRBbGxDdXN0b21lclBheW1lbnRzKCk7XHJcbiAgfVxyXG5cclxuICBATWVzc2FnZVBhdHRlcm4oeyBjbWQ6ICdHRVRfQ1VTVE9NRVJfUEFZTUVOVCcgfSlcclxuICBhc3luYyBnZXRDdXN0b21lclBheW1lbnRCeUlkKEBQYXlsb2FkKCkgaWQ6IGFueSk6IFByb21pc2U8Q3VzdG9tZXJQYXltZW50cyB8IG51bGw+IHtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLlBheW1lbnRNYW5hZ2VtZW50LmdldEN1c3RvbWVyUGF5bWVudEJ5SWQoaWQpO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHtjbWQ6ICdTRUFSQ0hfQUxMX0NVU1RPTUVSX1BBWU1FTlRTJ30pXHJcbiAgYXN5bmMgc2VhcmNoQWxsUGF5bWVudHMoQFBheWxvYWQoKSBxdWVyeTogUXVlcnkpOiBQcm9taXNlPEN1c3RvbWVyUGF5bWVudHNbXT57XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5QYXltZW50TWFuYWdlbWVudC5zZWFyY2hBbGxQYXltZW50cyhxdWVyeSk7XHJcbiAgfVxyXG5cclxuICAvL1N1cHBsaWVyIFBheW1lbnRzXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHtjbWQ6ICdDUkVBVEVfU1VQUExJRVJfUEFZTUVOVCd9KVxyXG4gIGFzeW5jIGNyZWF0ZVN1cHBsaWVyUGF5bWVudChAUGF5bG9hZCgpIHN1cHBsaWVyUGF5bWVudERUTzogU3VwcGxpZXJQYXltZW50RFRPKTogUHJvbWlzZTxTdXBwbGllclBheW1lbnRzPntcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLlBheW1lbnRNYW5hZ2VtZW50LmNyZWF0ZVN1cHBsaWVyUGF5bWVudChzdXBwbGllclBheW1lbnREVE8pO1xyXG4gIH1cclxuXHJcbiAgQE1lc3NhZ2VQYXR0ZXJuKHsgY21kOiAnR0VUX0FMTF9TVVBQTElFUl9QQVlNRU5UUycgfSlcclxuICBhc3luYyBnZXRBbGxTdXBwbGllclBheW1lbnRzKCk6IFByb21pc2U8U3VwcGxpZXJQYXltZW50c1tdPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5QYXltZW50TWFuYWdlbWVudC5nZXRBbGxTdXBwbGllclBheW1lbnRzKCk7XHJcbiAgfVxyXG5cclxuICBATWVzc2FnZVBhdHRlcm4oe2NtZDogJ1NFQVJDSF9BTExfU1VQUExJRVJfUEFZTUVOVFMnfSlcclxuICBhc3luYyBzZWFyY2hBbGxTdXBwbGllclBheW1lbnRzKEBQYXlsb2FkKCkgcXVlcnk6IFF1ZXJ5KTogUHJvbWlzZTxTdXBwbGllclBheW1lbnRzW10+e1xyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuUGF5bWVudE1hbmFnZW1lbnQuc2VhcmNoQWxsU3VwcGxpZXJQYXltZW50cyhxdWVyeSk7XHJcbiAgfVxyXG5cclxufVxyXG4iXSwidmVyc2lvbiI6M30=